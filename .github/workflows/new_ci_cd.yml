name: CI/CD Pipeline for Flask App

on:
  push:
    branches:
      - staging
      - main
  release:
    types: [created]

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        env:
          ANKIT_MONGO_URI: ${{ secrets.ANKIT_MONGO_URI }}
        run: pytest test_app.py
        

      - name: Deploy to Staging
        # if: github.ref == 'refs/heads/staging'
        env:
          HOST: ${{ secrets.STAGING_HOST }}
          USER: ${{ secrets.STAGING_USER }}
          SSH_KEY: ${{ secrets.EC2_KEY_KEY }}
        run: |
          echo "$SSH_KEY" > key.pem
          chmod 600 key.pem
          rsync -avz -e "ssh -o StrictHostKeyChecking=no -i key.pem" . $USER@$HOST:/home/$USER/student_app_staging
          ssh -o StrictHostKeyChecking=no -i key.pem $USER@$HOST "cd /home/$USER/student_app_staging && nohup python3 app.py > output.log 2>&1 &"

      - name: Deploy to Production
        # if: github.event_name == 'release'
        env:
          HOST: ${{ secrets.PRODUCTION_HOST }}
          USER: ${{ secrets.PRODUCTION_USER }}
          SSH_KEY: ${{ secrets.EC2_KEY_KEY }}
        run: |
          echo "$SSH_KEY" > key.pem
          chmod 600 key.pem
          rsync -avz -e "ssh -o StrictHostKeyChecking=no -i key.pem" . $USER@$HOST:/home/$USER/student_app_prod
          ssh -o StrictHostKeyChecking=no -i key.pem $USER@$HOST "cd /home/$USER/student_app_prod && nohup python3 app.py > output.log 2>&1 &"
