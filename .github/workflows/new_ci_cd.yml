name: CI/CD Pipeline

on:
  push:
    branches:
      - staging
      - main
  release:
    types:
      - published
  workflow_dispatch:

jobs:
  build-test:
    runs-on: self-hosted

    env:
      ANKIT_MONGO_URI: ${{ secrets.MONGO_URI }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: pytest

      - name: Build Application
        run: |
          echo "Build step: Add packaging if needed"
          rm -rf build
          mkdir -p build
          rsync -av --exclude='build' ./ build/

  deploy-staging:
    needs: build-test
    if: github.ref == 'refs/heads/staging'
    runs-on: self-hosted

    steps:
      - name: Deploy to staging (same EC2)
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            mkdir -p /home/ubuntu/student_app_staging
            cd /home/ubuntu/student_app_staging
            if [ ! -d ".git" ]; then
              rm -rf * .[^.]* || true
              git clone https://github.com/ankitanand200193/Student_App_CICD_jenkins.git .
              git checkout staging
            else
              git config pull.rebase false
              git pull origin staging
            fi
            echo "ANKIT_MONGO_URI='${{ secrets.MONGO_URI }}'" > .env
            pkill -f "python app.py" || true
            nohup python3 app.py > app.log 2>&1 &

  deploy-production:
    needs: build-test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: self-hosted

    steps:
      - name: Deploy to production (same EC2)
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            mkdir -p /home/ubuntu/student_app_production
            cd /home/ubuntu/student_app_production
            if [ ! -d ".git" ]; then
              rm -rf * .[^.]* || true
              git clone https://github.com/ankitanand200193/Student_App_CICD_jenkins.git .
              git checkout main
            else
              git config pull.rebase false
              git pull origin main
            fi
            echo "ANKIT_MONGO_URI='${{ secrets.MONGO_URI }}'" > .env
            pkill -f "python app.py" || true
            nohup python3 app.py > app.log 2>&1 &
