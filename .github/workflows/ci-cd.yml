name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - staging
#   release:
on:
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest

    env:
      ANKIT_MONGO_URI: ${{ secrets.ANKIT_MONGO_URI }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          pytest


  deploy-staging:
    needs: build-test
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Create .env file for staging
        run: echo "ANKIT_MONGO_URI=${{ secrets.MONGO_URI }}" > .env

      - name: Deploy to staging server via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST_STAGING }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd ${{ secrets.APP_DIR_STAGING }}
            git pull origin staging
            echo "ANKIT_MONGO_URI=${{ secrets.MONGO_URI }}" > .env
            pkill -f "python app.py" || true
            nohup python3 app.py > app.log 2>&1 &

  deploy-production:
    needs: build-test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Create .env file for production
        run: echo "ANKIT_MONGO_URI=${{ secrets.MONGO_URI }}" > .env

      - name: Deploy to production server via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST_PRODUCTION }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd ${{ secrets.APP_DIR_PRODUCTION }}
            git pull origin main
            echo "ANKIT_MONGO_URI=${{ secrets.MONGO_URI }}" > .env
            pkill -f "python app.py" || true
            nohup python3 app.py > app.log 2>&1 &
