name: CI/CD Pipeline

on:
  push:
    branches:
      - staging
      - main
  release:
    types:
      - published
  workflow_dispatch:


jobs:
  build-test:
    runs-on: ubuntu-latest

    env:
      ANKIT_MONGO_URI: ${{ secrets.MONGO_URI }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          pytest
      
      - name: Build Application
        run: |
          echo "Build step: Here you can add packaging or build commands"
          # Clean old build directory if exists
          rm -rf build
          # Create fresh build directory
          mkdir -p build
          # Copy everything except the build folder itself into build/
          rsync -av --exclude='build' ./ build/

  deploy-staging:
    needs: build-test
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Create .env file for staging
        run: echo "ANKIT_MONGO_URI=${{ secrets.MONGO_URI }}" > .env

      - name: Deploy to staging server via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST_STAGING }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd ***
            if [ ! -d ".git" ]; then
              rm -rf * .[^.]*   # remove all files including hidden except '.' and '..'
              git clone https://github.com/ankitanand200193/Student_App_CICD_jenkins.git .
              git checkout staging
            else
              git pull origin staging
            fi
            echo "ANKIT_MONGO_URI=***" > .env
            pkill -f "python app.py" || true
            nohup python3 app.py > app.log 2>&1 &


  deploy-production:
    needs: build-test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Create .env file for production
        run: echo "ANKIT_MONGO_URI=${{ secrets.MONGO_URI }}" > .env

      - name: Deploy to production server via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST_PRODUCTION }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd /home/ubuntu/student_app_staging
            git pull origin staging
            echo "ANKIT_MONGO_URI=***" > .env
            pkill -f "python app.py" || true
            nohup python3 app.py > app.log 2>&1 &
